
//bootstrap Type System

//: One Goal, prove all statements assuming 0
//: 0 is the ground theorem i.e. the empty judgement
//: 0 is the root assumption
//: all proof objects will unwind to 0 as the terminal object of the proof
assume 0

//: Two Introduction Rules
//: I1. ascription proves implication
forall A: B,B. A => B
//: I2. quantification proves existence of relational type equation
forall A,B. (A,B)

//: Implication Reduction is Strongly Normalizing
//: 1) All types that strongly normalize have kinds
//: 2) All kinds that have types yield values
//: 3) All finite-length strings are finite-length
//: therefore all strongly normalizing type systems yield finite-length proof objects

//: Four Elimination Rules, proving up to 5-way quantified relations
//: E1. 2D implies 1D and yields a proof object categorized by the remainder
forall A: B => B,B. (A,B) => B yields A<B>
//: E2. 3D implies 2D and yields a proof object categorized by the remainder
forall A: (B,1) => (B,1),B,1. (A,B,1) => (B,1) yields A<B,1>
//: E3. 4D implies 3D and yields a proof object categorized by the remainder
forall A: (B,1,2) => (B,1,2),B,1,2. (A,B,1,2) => (B,1,2) yields A<B,1,2>
//: E4. 5D implies 4D and yields a proof object categorized by the remainder
forall A: (B,1,2,x) => (B,1,2,x),B,1,2,x. (A,B,1,2,x) => (B,1,2,x) yields A<B,1,2,x>


